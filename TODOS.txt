Blacklist JA3 hashes of golang?, evilginx2, modlishka, murena etc

Collect JA3 hashes from users
If User-Agent confidence is high enough reject requests if JA3 hash is not in the list of known hashes

Implement JA3N, N means normalized. It ignores the order of the ciphers and extensions.
Needed for chrome.

Dont do timing analysis because you need a AI model to do that

Implement classical client side js challenge

Block requests from known cloud providers

Use JA4+ as its way more reliable
Wireshark, Nginx patched docker img
Implement myself?

JA4L S/C Timing
JA4T TCP Fingerprinting
JA4H HTTP Client Fingerprinting

Request data from hunt.io

Verify if client is actually supporting said TLS ciphers/versions
Use different versions of openssl to support as much ciphers as possible

Use serverless functions or ping providers to calculate realistic ping time
Compare with actual ping time. Estimate bandwith based on hostname / isp. Mobile is allowed to be slow
